# Playbook used to ping all servers
# File name: check-hosts.yml
---
- name: Ping all hosts
  hosts: all
  become: yes
  #remote_user: root

  # Set this to yes if you want Ansible to use sudo to become the root once it is connected to the machines in the play.
  # sudo: yes

  # This defines the username to connect to the machine originally, before running sudo if configured.
  # user: root

  # This is the user that Ansible will try and become using sudo.
  # For example, if we set sudo to yes and user to daniel, setting sudo_user to kate will cause Ansible to use sudo
  # to get from daniel to kate once logged in. If you were doing this in an interactive SSH session,
  # we could use sudo -u kate while you are logged in as daniel.
  # sudo_user: root

  # This allows us to tell Ansible what transport to use to connect to the remote host. We will mostly use ssh or paramiko
  # for remote hosts. However, we could also use local to avoid a connection overhead when running things on the localhost.
  # Most of the time we will be using either local, winrm or ssh here.
  connection: ssh

  # Ansible will automatically run the setup module on the remote hosts unless we tell it not to.
  # If we don't need the variables from the setup module, we could set this now and save some time.
  # gather_facts: "no"

  tasks:
    - debug: var=ansible_os_family
    - debug: var=ansible_distribution_release
    - debug: var=ansible_python_interpreter
    - debug: var=ansible_python_version
    - debug: msg="user={{ ansible_user }}"

    # These two tasks will add host to local known hosts automatically
    - name: Check SSH known_hosts for {{ inventory_hostname }}
      local_action: shell ssh-keygen -F {{ inventory_hostname }}
      register: checkForKnownHostsEntry
      failed_when: false
      changed_when: false
      ignore_errors: yes
    - name: Add {{ inventory_hostname }} to SSH known hosts automatically
      when: checkForKnownHostsEntry.rc == 1
      changed_when: checkForKnownHostsEntry.rc == 1
      set_fact:
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"

    # https://docs.ansible.com/ansible/latest/plugins/lookup/inventory_hostnames.html
    - name: Show all the hosts in inventory
      debug:
        msg: "{{ item }}"
      with_inventory_hostnames:
        - all

    - name: Set fact list of hosts
      set_fact: host_item="{{ item }}"
      with_inventory_hostnames:
        - all
      register: hosts_list

    - name: Make a list of hosts
      set_fact: cluster_hosts="{{ hosts_list.results | map(attribute='ansible_facts.host_item') | list }}"

    - debug:
        msg: System {{ inventory_hostname }} has uuid {{ ansible_product_uuid }}

    - debug:
        msg: System {{ inventory_hostname }} has gateway {{ ansible_default_ipv4.gateway }}
      when: ansible_default_ipv4.gateway is defined

    - debug:
        msg: "{{ lookup('env', 'PWD') }}"
